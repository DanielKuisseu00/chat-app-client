[{"C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\index.js":"1","C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\reportWebVitals.js":"2","C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\App.js":"3","C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\pages\\Chat.js":"4","C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\pages\\Register.js":"5","C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\pages\\Login.js":"6","C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\pages\\ErrorPage.js":"7","C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\util\\axios\\axiosInstance.js":"8","C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\util\\axios\\routes.js":"9","C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\redux\\store.js":"10","C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\redux\\userSlice.js":"11","C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\pages\\SetAvatar.js":"12","C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\data\\users.js":"13"},{"size":478,"mtime":1647563844947,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1647546547439,"results":"16","hashOfConfig":"15"},{"size":703,"mtime":1648069684459,"results":"17","hashOfConfig":"15"},{"size":6850,"mtime":1648085238464,"results":"18","hashOfConfig":"15"},{"size":5299,"mtime":1648070424308,"results":"19","hashOfConfig":"15"},{"size":4278,"mtime":1648070714120,"results":"20","hashOfConfig":"15"},{"size":127,"mtime":1647551302715,"results":"21","hashOfConfig":"15"},{"size":291,"mtime":1647713271712,"results":"22","hashOfConfig":"15"},{"size":260,"mtime":1648071645338,"results":"23","hashOfConfig":"15"},{"size":823,"mtime":1647563569462,"results":"24","hashOfConfig":"15"},{"size":420,"mtime":1647563377015,"results":"25","hashOfConfig":"15"},{"size":3063,"mtime":1648074611600,"results":"26","hashOfConfig":"15"},{"size":1594,"mtime":1648063464407,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1qo83yv",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"31"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\index.js",[],[],["73","74"],"C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\App.js",["75"],[],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Chat from \"./pages/Chat\";\nimport Register from \"./pages/Register\";\nimport Login from \"./pages/Login\";\nimport ErrorPage from \"./pages/ErrorPage\";\nimport SetAvatar from \"./pages/SetAvatar\";\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Chat />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/setAvatar\" element={<SetAvatar />} />\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\pages\\Chat.js",["76","77","78"],[],"import React, { useState, useEffect } from \"react\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\nimport styled from \"styled-components\";\r\nimport io from \"socket.io-client\";\r\nimport Logo from \"../assets/chaty-logos_white.png\";\r\nimport { AiOutlineSend } from \"react-icons/ai\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { removeUser } from \"../redux/userSlice\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { axiosInstance } from \"../util/axios/axiosInstance\";\r\nimport { getAllUsersRoute } from \"../util/axios/routes\";\r\n\r\nconst socket = io.connect(\"http://localhost:5002\");\r\n\r\nconst Chat = () => {\r\n  const [room, setRoom] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const user = useSelector((state) => state.user.value);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"recieve_message\", (data) => {\r\n      setMessages((list) => [...list, data]);\r\n      console.log(messages);\r\n    });\r\n  }, [socket]);\r\n\r\n  const joinRoom = (roomCode) => {\r\n    setRoom(roomCode);\r\n    socket.emit(\"join_room\", roomCode);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const request = async () => {\r\n      const { data } = await axiosInstance.get(getAllUsersRoute);\r\n      joinRoom(user.user.roomCode);\r\n      setUsers([...data]);\r\n    };\r\n\r\n    request();\r\n  }, []);\r\n\r\n  const sendMessage = async () => {\r\n    const currentMessage = {\r\n      room,\r\n      message,\r\n      id: Math.floor(Math.random() * 100000),\r\n      sender: user.user.username,\r\n      time: `${new Date(Date.now()).getHours()} : ${new Date(\r\n        Date.now()\r\n      ).getMinutes()}`,\r\n    };\r\n\r\n    await socket.emit(\"send_message\", currentMessage);\r\n    await setMessages((list) => [...list, currentMessage]);\r\n    setMessage(\"\");\r\n    console.log(messages);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <ChatContainer>\r\n        <ContactsContainer>\r\n          <Top>\r\n            <Image src={Logo} />\r\n            <Title>Chatty</Title>\r\n          </Top>\r\n          <Bottom>\r\n            {users.map((user) => {\r\n              const userRoomCode = user.roomCode;\r\n              return (\r\n                <Contact key={user._id} onClick={() => joinRoom(userRoomCode)}>\r\n                  <ProfileImage src={user.avatar} />\r\n                  <Username>{user.username}</Username>\r\n                </Contact>\r\n              );\r\n            })}\r\n          </Bottom>\r\n        </ContactsContainer>\r\n        <MessageContainer>\r\n          <MessageTop>\r\n            <PowerButton\r\n              onClick={() => {\r\n                dispatch(removeUser());\r\n                navigate(\"/login\");\r\n              }}\r\n            >\r\n              <PowerText>Logout</PowerText>\r\n            </PowerButton>\r\n\r\n            <MessageTopText>Online: </MessageTopText>\r\n            <OnlineBubble />\r\n          </MessageTop>\r\n          <MessageMiddle>\r\n            <ScrollToBottom style={{ height: \"100%\", display: \"flex\" }}>\r\n              {messages.map((message) => {\r\n                return (\r\n                  <MessageBubble\r\n                    key={message.id}\r\n                    sender={\r\n                      user.user.username === message.sender ? true : false\r\n                    }\r\n                  >\r\n                    {message.message}\r\n                  </MessageBubble>\r\n                );\r\n              })}\r\n            </ScrollToBottom>\r\n          </MessageMiddle>\r\n          <MessageBottom>\r\n            <Input\r\n              name=\"message\"\r\n              placeholder=\"blah blah\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onKeyDown={(e) => (e = e.key === \"Enter\" && sendMessage())}\r\n              autoComplete=\"off\"\r\n            />\r\n            <SendButton onClick={sendMessage}>\r\n              <AiOutlineSend style={{ color: \"black\" }} />\r\n            </SendButton>\r\n          </MessageBottom>\r\n        </MessageContainer>\r\n      </ChatContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  max-width: 100vw;\r\n  height: 100vh;\r\n  background: #131224;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ChatContainer = styled.div`\r\n  width: 90%;\r\n  height: 90%;\r\n  background: #080421;\r\n  display: flex;\r\n`;\r\n\r\nconst ContactsContainer = styled.div`\r\n  flex: 1;\r\n  disaplay: flex;\r\n  overflow: auto;\r\n  scrollbar-width: none;\r\n`;\r\n\r\nconst Top = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: white;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Bottom = styled.div`\r\n  flex: 4;\r\n  background: #080421;\r\n  padding: 0px 10px;\r\n`;\r\n\r\nconst Contact = styled.div`\r\n  height: 80px;\r\n  max-width: 100%;\r\n  background: #3f3b54;\r\n  margin: 10px 0px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 10px;\r\n  color: white;\r\n  transiton: all 800ms ease-in-out;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: #595957;\r\n  }\r\n`;\r\n\r\nconst ProfileImage = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 100%;\r\n  object-fit: cover;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Username = styled.h3`\r\n  font-weight: 400;\r\n`;\r\n\r\nconst MessageContainer = styled.div`\r\n  flex: 3;\r\n  background: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst MessageTop = styled.div`\r\n  height: 10%;\r\n  background: #080421;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding: 0 10px;\r\n`;\r\n\r\nconst PowerButton = styled.div`\r\n  background: black;\r\n  padding: 10px;\r\n  color: white;\r\n  margin: 5px;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst PowerText = styled.p``;\r\n\r\nconst MessageTopText = styled.p`\r\n  color: white;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst OnlineBubble = styled.div`\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 100%;\r\n  background: #22ff00;\r\n`;\r\n\r\nconst MessageMiddle = styled.div`\r\n  height: 80%;\r\n  display: flex;\r\n`;\r\n\r\nconst MessageBubble = styled.div`\r\n  padding: 10px;\r\n  width: 100px;\r\n  margin-bottom: 10px;\r\n  height: 30px;\r\n  background: teal;\r\n  border-radius: 10px;\r\n  align-self: ${(props) => (props.sender ? \"flex-end\" : \"flex-start\")};\r\n`;\r\n\r\nconst MessageBottom = styled.div`\r\n  height: 10%;\r\n  background: #080421;\r\n  display: flex;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 95%;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  padding: 0 10px;\r\n  &: focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst SendButton = styled.div`\r\n  width: 5%;\r\n  background: #03fcc2;\r\n  color: black;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default Chat;\r\n","C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\pages\\Register.js",["79","80"],[],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Logo from \"../assets/chaty-logos_white.png\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { axiosInstance } from \"../util/axios/axiosInstance\";\r\nimport { registerRoute } from \"../util/axios/routes\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addUser, removeUser } from \"../redux/userSlice\";\r\n\r\nconst Register = () => {\r\n  // Defining vairables\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const user = useSelector((state) => state.user.value);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  // configuring Toast options for modal\r\n\r\n  const toastOptions = {\r\n    position: \"top-center\",\r\n    autoClose: \"800ms\",\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"dark\",\r\n  };\r\n\r\n  // If user is already logged in and saved into local stoarge code will send them to chat room.\r\n\r\n  // useEffect(() => {\r\n  //   if (user.user.username) {\r\n  //     navigate(\"/\");\r\n  //   }\r\n  // }, []);\r\n\r\n  // Makes request to api and saves recived user object to redux\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (handleValidation) {\r\n      try {\r\n        const { data } = await axiosInstance.post(registerRoute, {\r\n          username,\r\n          password,\r\n          email,\r\n        });\r\n        dispatch(removeUser());\r\n        dispatch(addUser(data));\r\n        navigate(\"/setAvatar\");\r\n      } catch (err) {\r\n        toast.error(\"Opps? somthing went wrong\", toastOptions);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Code validates user form input\r\n\r\n  const handleValidation = () => {\r\n    if (password !== confirmPassword) {\r\n      toast.error(\"password and confirm password should match.\", toastOptions);\r\n      return false;\r\n    } else if (username.length < 3) {\r\n      toast.error(\"username must be longer than 3 chafacters\", toastOptions);\r\n      return false;\r\n    } else if (email.length < 5) {\r\n      toast.error(\"email must be longer than 5 characters\", toastOptions);\r\n      return false;\r\n    } else if (password.length < 6) {\r\n      toast.error(\"password must be longer than 3 chafacters\", toastOptions);\r\n      return false;\r\n    } else if (email === \"\") {\r\n      toast.error(\"Cant leave field empty\", toastOptions);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Form onSubmit={(e) => handleSubmit(e)}>\r\n          <Top>\r\n            <Image src={Logo} />\r\n            <Name>Chatty</Name>\r\n          </Top>\r\n          <InputContainer>\r\n            <Input\r\n              type={\"text\"}\r\n              name=\"username\"\r\n              placeholder=\"username\"\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n\r\n            <Input\r\n              type={\"email\"}\r\n              name=\"email\"\r\n              placeholder=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n\r\n            <Input\r\n              type={\"password\"}\r\n              name=\"password\"\r\n              placeholder=\" password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n\r\n            <Input\r\n              type={\"password\"}\r\n              name=\"confirmPassword\"\r\n              placeholder=\"confirm password\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n\r\n            <Button type=\"submit\">Create</Button>\r\n\r\n            <Span>\r\n              I already have an account{\" \"}\r\n              <Link\r\n                style={{ color: \"blue\", textDecoration: \"none\" }}\r\n                to=\"/login\"\r\n              >\r\n                Login\r\n              </Link>\r\n            </Span>\r\n          </InputContainer>\r\n        </Form>\r\n      </Container>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  max-width: 100vw;\r\n  height: 100vh;\r\n  background: #131224;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 30%;\r\n  display: flex;\r\n  height: 500px;\r\n  flex-direction: column;\r\n  border-radius: 10px;\r\n  background: #0b0914;\r\n`;\r\n\r\nconst Top = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n`;\r\n\r\nconst Name = styled.h2`\r\n  color: white;\r\n  font-size: 30px;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  max-width: 100%;\r\n  flex: 3;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px 40px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: 2px solid #3e1c96;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  margin-bottom: 15px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: #7b62c4;\r\n  color: white;\r\n  padding: 10px;\r\n  border: none;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Span = styled.span`\r\n  color: white;\r\n`;\r\n\r\nexport default Register;\r\n","C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\pages\\Login.js",["81"],[],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../assets/chaty-logos_white.png\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { axiosInstance } from \"../util/axios/axiosInstance\";\r\nimport { loginRoute } from \"../util/axios/routes\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addUser, removeUser } from \"../redux/userSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  // Defining vairables\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const user = useSelector((state) => state.user.value);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  console.log(user);\r\n\r\n  // configuring Toast options for modal\r\n\r\n  const toastOptions = {\r\n    position: \"top-center\",\r\n    autoClose: \"800ms\",\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"dark\",\r\n  };\r\n\r\n  // If user is already logged in and saved into local stoarge code will send them to chat room.\r\n\r\n  // useEffect(() => {\r\n  //   if (user.username) {\r\n  //     navigate(\"/\");\r\n  //   }\r\n  // }, []);\r\n\r\n  // Makes request to api and saves recived user object to redux\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (handleValidation) {\r\n      try {\r\n        const { data } = await axiosInstance.post(loginRoute, {\r\n          username,\r\n          password,\r\n        });\r\n        dispatch(removeUser());\r\n        dispatch(addUser(data));\r\n\r\n        navigate(\"/\");\r\n      } catch (err) {\r\n        toast.error(\"Opps? somthing went wrong\", toastOptions);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Code validates user form input\r\n\r\n  const handleValidation = () => {\r\n    if (username.length < 3 || password.length < 3) {\r\n      toast.error(\"Email and password required\", toastOptions);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Form onSubmit={(e) => handleSubmit(e)}>\r\n          <Top>\r\n            <Image src={Logo} />\r\n            <Name>Chatty</Name>\r\n          </Top>\r\n          <InputContainer>\r\n            <Input\r\n              type={\"text\"}\r\n              name=\"username\"\r\n              placeholder=\"username\"\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n\r\n            <Input\r\n              type={\"password\"}\r\n              name=\"password\"\r\n              placeholder=\" password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n\r\n            <Button type=\"submit\">Login</Button>\r\n\r\n            <Span>\r\n              I don't have an account yet{\" \"}\r\n              <Link\r\n                style={{ color: \"blue\", textDecoration: \"none\" }}\r\n                to=\"/register\"\r\n              >\r\n                Register\r\n              </Link>\r\n            </Span>\r\n          </InputContainer>\r\n        </Form>\r\n      </Container>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  max-width: 100vw;\r\n  height: 100vh;\r\n  background: #131224;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 30%;\r\n  display: flex;\r\n  height: 500px;\r\n  flex-direction: column;\r\n  border-radius: 10px;\r\n  background: #0b0914;\r\n`;\r\n\r\nconst Top = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n`;\r\n\r\nconst Name = styled.h2`\r\n  color: white;\r\n  font-size: 30px;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  max-width: 100%;\r\n  flex: 3;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px 40px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: 2px solid #3e1c96;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  margin-bottom: 15px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: #7b62c4;\r\n  color: white;\r\n  padding: 10px;\r\n  border: none;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Span = styled.span`\r\n  color: white;\r\n`;\r\n\r\nexport default Login;\r\n","C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\pages\\ErrorPage.js",[],[],"C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\util\\axios\\axiosInstance.js",[],[],"C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\util\\axios\\routes.js",[],[],"C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\redux\\store.js",[],[],"C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\redux\\userSlice.js",[],[],"C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\pages\\SetAvatar.js",["82"],[],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { axiosUpload } from \"../util/axios/axiosInstance\";\r\nimport { setAvatarRoute } from \"../util/axios/routes\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addUser, removeUser } from \"../redux/userSlice\";\r\n\r\nconst SetAvatar = () => {\r\n  const [file, setFile] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const user = useSelector((state) => state.user.value);\r\n\r\n  useEffect(() => {\r\n    if (user.user.isAvatarImageSet === true) {\r\n      navigate(\"/\");\r\n    } else if (!user.user) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  const toastOptions = {\r\n    position: \"top-center\",\r\n    autoClose: \"800ms\",\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"dark\",\r\n  };\r\n\r\n  // function for calling api\r\n  const postImage = async ({ image }) => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", image);\r\n    formData.append(\"id\", user.user._id.toString());\r\n\r\n    const res = await axiosUpload.post(setAvatarRoute, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart-form-data\",\r\n      },\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await postImage({ image: file });\r\n      dispatch(removeUser());\r\n      dispatch(addUser(data));\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"Opps? somthing went wrong\", toastOptions);\r\n    }\r\n  };\r\n\r\n  const fileSelected = (e) => {\r\n    const file = e.target.files[0];\r\n    setFile(file);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Title>Set Avatar</Title>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Input type=\"file\" onChange={fileSelected} />\r\n          <Button>Add Profile Image</Button>\r\n        </Form>\r\n      </Container>\r\n      ;\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  max-width: 100vw;\r\n  height: 100vh;\r\n  background: #131224;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-weight: 400;\r\n  font-size: 100px;\r\n  align-self: flex-start;\r\n  padding-left: 100px;\r\n  margin-bottom: 100px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  background: #0b0914;\r\n  height: 200px;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: 2px solid #3e1c96;\r\n  background: #131224;\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  background: #7b62c4;\r\n  color: white;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default SetAvatar;\r\n","C:\\Users\\hillj\\Desktop\\dev\\react\\chaty\\client\\src\\data\\users.js",[],[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":12},{"ruleId":"87","severity":1,"message":"91","line":9,"column":23,"nodeType":"89","messageId":"90","endLine":9,"endColumn":38},{"ruleId":"92","severity":1,"message":"93","line":29,"column":6,"nodeType":"94","endLine":29,"endColumn":14,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":44,"column":6,"nodeType":"94","endLine":44,"endColumn":8,"suggestions":"97"},{"ruleId":"87","severity":1,"message":"98","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"87","severity":1,"message":"99","line":19,"column":9,"nodeType":"89","messageId":"90","endLine":19,"endColumn":13},{"ruleId":"87","severity":1,"message":"98","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"100","line":23,"column":6,"nodeType":"94","endLine":23,"endColumn":8,"suggestions":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useSearchParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'user.user.roomCode'. Either include it or remove the dependency array.",["105"],"'useEffect' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'user.user'. Either include them or remove the dependency array.",["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [messages]",{"range":"113","text":"114"},"Update the dependencies array to be: [user.user.roomCode]",{"range":"115","text":"116"},"Update the dependencies array to be: [navigate, user.user]",{"range":"117","text":"118"},[1126,1134],"[messages]",[1468,1470],"[user.user.roomCode]",[843,845],"[navigate, user.user]"]